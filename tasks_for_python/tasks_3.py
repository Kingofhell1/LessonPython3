

def task_16():
#     # Задача 16: Требуется вычислить, сколько раз встречается некоторое число X в массиве A[1..N]. 
#     # Пользователь в первой строке вводит натуральное число N – количество элементов в массиве. 
#     # В последующих  строках записаны N целых чисел Ai. Последняя строка содержит число X


    N = abs(int(input("Введите длину списка: "))) # abs - возвращает абсолютное значение. Пример -42 вернет 42.
    string = input("Введите кол-во элементов списка: ").split()
    A_list_1 = list(map(int, string))
    count = 0
    X = int(input('Введите число X, которое необходимо найти в списке: '))
    for i in range(N):
        if A_list_1[i] == X:
            count += 1
    print(f'Число {X} встречается в списке A_list_1 {count} раз')    


    # или с проверкой на то, если пользователь ввел не то кол-во элементов в списке 


    # N = abs(int(input("Введите длину списка: ")))
    # string = input("Введите кол-во элементов списка: ").split()
    # A_list_1 = list(map(int, string))
    # if len(A_list_1) > N:
    #     print("Кол-во элементов не соответсвует длине списка((")
    # else:
    #    count = 0
    #    X = int(input('Введите число X, которое необходимо найти в списке: '))
    #    for i in range(N):
    #      if A_list_1[i] == X:
    #         count += 1
    #    print(f'Число {X} встречается в списке A_list_1 {count} раз')


def task_18():
    # Задача 18: Требуется найти в массиве A[1..N] самый близкий по величине элемент к заданному числу X. 
    # Пользователь в первой строке вводит натуральное число N – количество элементов в массиве. 
    # В последующих  строках записаны N целых чисел Ai. Последняя строка содержит число X


    N = abs(int(input("Введите длину списка: "))) # abs - возвращает абсолютное значение 
    string = input("Введите кол-во элементов списка: ").split()
    A_list_1 = list(map(int, string))
    count = 0
    X = int(input('Введите число X, которое необходимо найти в списке: '))
    min = abs(X - A_list_1[0])
    for i in range(1, N):
       count = abs(X - A_list_1[i])
       if count < min:
            min = count
            index = i
    print(f'Число {A_list_1[index]} в списке A наиболее близко по величине к числу {X}, их разница составляет {abs(X - A_list_1[index])}')




def task_20():
    # *Задача 20: * В настольной игре Скрабл (Scrabble) каждая буква имеет определенную ценность. В случае с английским алфавитом очки распределяются так:A, E, I, O, U, L, N, S, T, R – 1 очко; D, G – 2 очка; B, C, M, P – 3 очка; F, H, V, W, Y – 4 очка; K – 5 очков; J, X – 8 очков; Q, Z – 10 очков. 
    # А русские буквы оцениваются так: А, В, Е, И, Н, О, Р, С, Т – 1 очко; Д, К, Л, М, П, У – 2 очка; Б, Г, Ё, Ь, Я – 3 очка; Й, Ы – 4 очка; Ж, З, Х, Ц, Ч – 5 очков; Ш, Э, Ю – 8 очков; Ф, Щ, Ъ – 10 очков. 
    # Напишите программу, которая вычисляет стоимость введенного пользователем слова. 
    # Будем считать, что на вход подается только одно слово, которое содержит либо только английские, либо только русские буквы.


    list_letters = {1:"AEIOULNSTRАВЕИНОРСТ",
                    2:"DGДКЛМПУ",
                    3:"BCMPБГЁЬЯ",
                    4:"FHVWYЙЫ",
                    5:"KЖЗХЦЧ",
                    8:"JXШЭЮ",
                    10:"QZФЩЪ"}

    word = input("Введите слово: ").upper()
    summ = 0
    for i in word:
        for k, v in list_letters.items(): # items -он возвращает итерируемый объект, позволяющий получить пары "ключ-значение" словаря.
            if i in v:
                summ += k
    print(f"Стоимость слова: {summ}")



def Tasks_enter():
    while True:
        n = int(input("Введите номер задачи: "))
        if n == 16:
            task_16()
        elif n == 18:
            task_18()
        elif n == 20:
            task_20()
        else:
         Tasks_enter()
Tasks_enter()
    